ggplot(datos_2021_III, aes(x=SECTOR,y=EMPLEADOS, fill=SECTOR)) + geom_bar(stat = "identity")+
theme_classic()
ggplot(datos_2021_III, aes(x=SECTOR,y=EMPLEADOS, fill=EMPLEADOS)) + geom_bar(stat = "identity")+
theme_classic()
table(datos_2021_III$SECTOR)
dataset <- data.frame(matrix(ncol = 4, nrow = 0,
dimnames = list(NULL, c("mes", "temperatura",
"precipitaciones", "humedad"))))
View(dataset)
View(dataset)
dataset <- data.frame(matrix(ncol = 4, nrow = 4,
dimnames = list(NULL, c("mes", "temperatura",
"precipitaciones", "humedad"))))
View(dataset)
View(dataset)
dataset <- data.frame(matrix(1:12, ncol = 4, nrow = 4,
dimnames = list(NULL, c("mes", "temperatura",
"precipitaciones", "humedad"))))
View(dataset)
data_Jesus <- data.frame(matrix(3:2.5:120, ncol = 4, nrow = 40,
dimnames = list(NULL, c("Variable_1", "Variable_2",
"Variable_3", "Variable_4"))))
View(data_Jesus)
data_Jesus <- data.frame(matrix(3:2:120, ncol = 4, nrow = 40,
dimnames = list(NULL, c("Variable_1", "Variable_2",
"Variable_3", "Variable_4"))))
data_Jesus <- data.frame(matrix(1:16, ncol = 4, nrow = 4,
dimnames = list(NULL, c("Variable_1", "Variable_2",
"Variable_3", "Variable_4"))))
View(data_Jesus)
data_Jesus <- data.frame(matrix(1:120, ncol = 3, nrow = 40,
dimnames = list(NULL, c("Variable_1", "Variable_2","Variable_3"))))
View(data_Jesus)
reticulate::repl_python()
print("Hola Mundo)
reticulate::repl_python()
print("Hola Mundo)
library(sf)
library(ggplot2)
municipios <- st_read("municipios.json")
install.packages("ggplot2")
install.packages("sf")
library(sf)
library(ggplot2)
municipios <- st_read("municipios.json")
install.packages("ggplot2")
y <- c(3,5,0,3,3) # vector e coordenas
p1 = st_point(c(5,7,3,2))
Sys.getenv('PATH')
install.packages('sf')
install.packages('maptools')
library(sf)
# objecto tipo punto
punto <- st_point(c(3,4))
class(punto)
plot(punto)
p1 = st_point(c(5,7,3,2))
plot(p1, axes=T)
# multiple punto
x <- c(5,2,3,4,5) # vector e coordenas
y <- c(3,5,0,3,3) # vector e coordenas
coords <- cbind(x,y)
class(coords)
print(coords)
plot(coords)
MP <- st_multipoint(coords)
class(MP)
print(MP)
plot(MP, axes = T)
# Objecto Multipunto en 3Dimenciones
xyz <- cbind(coords, c(8,7,6,4,5))
print(xyz)
p1 <- st_point(c(3,2)) ; p2 <- st_point(c(5,4)) ; p3 <- st_point(c(4,7))
geometria1 <- st_sfc(p1,p2,p3)
# crear una tabla de atribustos
num <- c(1,2,3)
nombre <- c('Pozo', 'Gazolina', 'Escuela')
tab <- data.frame(cbind(num,nombre))
# asocir una geometria sfc
SFP <- st_sf(tab, geometry = geometria1)
class(SFP)
print(SFP)
plot(SFP, axes = T)
plot(st_geometry(SFP), axes=T)
# Selecionado solo una caracteristica 'Pozo'
Pozo <- SFP[nombre == 'Pozo',]
plot(st_geometry(Pozo), axes = T)
rm(list = ls())
# (Paso_1) creo los puntos
p1 <- st_point(c(23,31)) ; p2 <- st_point(c(50,14)) ; p3 <- st_point(c(71,71))
p11 <- st_point(c(24,37)) ; p22 <- st_point(c(51,11)) ; p33 <- st_point(c(77,73))
p111 <- st_point(c(21,32)) ; p222 <- st_point(c(49,17)) ; p333 <- st_point(c(75,71))
class(p1)
# (Paso_2) pego los puntos
geometria <- st_sfc(p1,p2,p3,p11,p22,p33,p111,p222,p333)
rm(p1,p2,p3) ; rm(p11,p22,p33) ; rm(p111,p222,p333)
# (Paso_2) creo el data framen
id <- c('001','002','003')
city <- c('Santa Marta', 'Bogota', 'Barranquilla','Santa Marta', 'Bogota',
'Barranquilla', 'Santa Marta', 'Bogota', 'Barranquilla')
df <- data.frame(id,city)
# (Paso_3) pego los puntos con los datos
geom_city <- st_sf(df, geomtry = geometria)
class(geom_city)
plot(st_geometry(geom_city), axes=T)
punto <- st_point(c(3,4))
class(punto)
plot(punto)
p1 = st_point(c(5,7,3,2))
plot(p1, axes=T)
x <- c(5,2,3,4,5) # vector e coordenas
y <- c(3,5,0,3,3) # vector e coordenas
coords <- cbind(x,y)
class(coords)
print(coords)
plot(coords)
MP <- st_multipoint(coords)
class(MP)
print(MP)
plot(MP, axes = T)
chip = []
chip <- c()
library(haven)
Pescadores <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Pescadores.dta")
View(Pescadores)
library(haven)
Coordenadas_Ovejas <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Coordenadas_Ovejas.dta")
View(Coordenadas_Ovejas)
df_pes <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Pescadores.dta")
df_coo <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Coordenadas_Ovejas.dta")
merge(x = df_pes, y = df_coo, by = c("CODIGO_VER", "CODIG_VER"))
View(Coordenadas_Ovejas)
View(Coordenadas_Ovejas)
View(df_pes)
View(df_coo)
View(Coordenadas_Ovejas)
df_pes <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Pescadores.dta")
df_coo <- read_dta("E:/Trabajo/Trabajo_Escuela_de_Gobierno/Documentos_Municipios/Ovejas/Caraterizacion/Datos_Listo/Coordenadas_Ovejas.dta")
merge(x = df_pes, y = df_coo, by = c("CODIGO_VER", "CODIG0_VER"))
View(df_pes)
View(df_coo)
rm(list = ls())
rm(list = ls())
library(pacman)
library(rvest, tidyverse)
url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/"
browseURL(url)
html <- read_html(url)
html %>%
html_elements("h1") %>%
html_text()
View(html)
View(html)
html_text(html_elements(html, "h1"))
View(html)
View(html)
rm(list = ls())
url <- "https://es.wikipedia.org/wiki/Anexo:%C3%93scar_a_la_mejor_pel%C3%ADcula"
browseURL(url)
html <- read_html(url)
View(html)
rm(list = ls())
url <- "https://es.wikipedia.org/wiki/Anexo:%C3%93scar_a_la_mejor_pel%C3%ADcula"
browseURL(url)
html <- read_html(url)
html %>%
html_elements("h1") %>%
html_text()
View(html)
html_text(html_elements(html, "h1"))
html_text(html_elements(html, "h1"))
df <- cars
View(df)
rm(list = ls())
url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/page1.html"
browseURL(url)
rm(list = ls())
## Limpiamos nuestro ambiente
rm(list = ls())
## Cargamos los paquetes
library(pacman)
p_load(tidyverse, rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor)
df <- import("https://www.datos.gov.co/resource/epsv-yhtj.csv")
##=== 1. Data pre-processing ===##
## Analicemos la estructura de la base
skim(df)
df <- df %>% select(-cod_ase_) ## Esta variable parece no ess relevante. La vamos a dropear
tabyl(df$estrato)
## No obstante los NAs representan menos del 5% de las entradadas
df <- df %>% mutate(estrato=ifelse(is.na(estrato),2,estrato))
## Seleccionamos las variables relevantes
df <- df %>% select(orden, edad_, uni_med_, grupo_etario, sexo, area_,
num_comuna, tipo_de_seguridad_social, estrato, edema,
delgadez, oiel_reseca, hiperpigm, cambios_cabello,
palidez, zscorept_aprox, interpretaci_n_zscore_pt)
## No obstante los NAs representan menos del 5% de las entradadas
df <- df %>% mutate(estrato=ifelse(is.na(estrato),1,estrato))
## Seleccionamos las variables relevantes
df <- df %>% select(orden, edad_, uni_med_, grupo_etario, sexo, area_,
num_comuna, tipo_de_seguridad_social, estrato, edema,
delgadez, oiel_reseca, hiperpigm, cambios_cabello,
palidez, zscorept_aprox, interpretaci_n_zscore_pt)
## Construimos la edad
tabyl(df$uni_med_) ## unidad de medida: 1=dias , 2=mes
tabyl(df$edad_)
df <- df %>%
mutate(edad_=case_when(uni_med_ == 1 ~ edad_*365,
uni_med_ == 2 ~ edad_*30))
tabyl(df$edad_)
variables_dicotomas <- c("edema", "delgadez", "oiel_reseca","hiperpigm", "cambios_cabello", "palidez")
lapply(df[,variables_dicotomas],table)
df[,variables_dicotomas] = df[,variables_dicotomas] - 1
lapply(df[,variables_dicotomas],table)
## Arreglamos las variables dic?tomas para que sean 1 y 0
variables_dicotomas <- c("edema", "delgadez", "oiel_reseca","hiperpigm", "cambios_cabello", "palidez")
lapply(df[,variables_dicotomas],table)
df[,variables_dicotomas] = df[,variables_dicotomas] - 1
lapply(df[,variables_dicotomas],table)
## Definimos las variables categoricas
variables_categoricas <- c("orden", "uni_med_", "grupo_etario","sexo", "area_", "num_comuna",
"tipo_de_seguridad_social", "estrato","edema", "delgadez", "oiel_reseca",
"hiperpigm", "cambios_cabello","palidez", "interpretaci_n_zscore_pt")
for (v in variables_categoricas){ df[, v] <- as.factor(df[, v, drop = T])}
## Convertimos el puntaje en positivo
df$zscorept_aprox <- -df$zscorept_aprox
## Relacion entre el puntaje zscore con la desnutricion
ggplot(df, aes(x = edad_, y = zscorept_aprox, color = interpretaci_n_zscore_pt)) +
geom_point() + theme_test() +
labs(x = "Edad en d?as", y = "Puntaje de desnutrici?n") +
scale_color_discrete(name = "Interpretaci?n") +
theme(legend.position="bottom")
## Ahora procedemos a dummyficar la base
df2 <- model.matrix(~ zscorept_aprox + edad_ + uni_med_ +
grupo_etario + sexo + area_ + num_comuna +
tipo_de_seguridad_social + estrato +
edema + delgadez + oiel_reseca +
hiperpigm + cambios_cabello + palidez, df) %>% as.data.frame()
## Ahora vamos a revisar la distribucion de nuestra variable a predecir
ggplot(df2, aes(x = zscorept_aprox)) +
geom_histogram(bins = 50, fill = "darkblue") +
labs(x = "Puntaje de desnutrici?n", y = "Cantidad") +
theme_test()
## Ahora vamos a dividir la base en train y test
set.seed(666)
id_train <- sample(1:nrow(df2), size = 0.7*nrow(df2), replace = FALSE)
train <- df2[id_train, ]
test  <- df2[-id_train, ]
## Convertimos la y en log
y_train <- log(train[,"zscorept_aprox"])
X_train <- select(train, -zscorept_aprox)
y_test <- log(test[,"zscorept_aprox"])
X_test <- select(test, -zscorept_aprox)
X_test$edad_ <- (X_test$edad_ - mu)/sigma
BOGO_67 <- read.table("E:/Trabajo/CEDE/PRUEBA 2022-2/PRUEBA/Punto 1/BOGO_67.dta", quote="\"", comment.char="")
View(BOGO_67)
library(haven)
BOGO1_67 <- read_dta("E:/Trabajo/CEDE/PRUEBA 2022-2/PRUEBA/Punto 1/BOGO1_67.txt")
View(BOGO1_67)
library(readr)
BOGO_67 <- read_csv("E:/Trabajo/CEDE/PRUEBA 2022-2/PRUEBA/Punto 1/BOGO_67.dta")
View(BOGO_67)
library(readr)
BOGO_67_cepe <- read_csv("E:/Trabajo/CEDE/PRUEBA 2022-2/PRUEBA/Punto 1/BOGO_67_cepe.txt")
View(BOGO_67_cepe)
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
library(pacman)
p_load(tidyverse, rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor)
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
rm(list = ls())
library(pacman)
p_load(tidyverse, rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor)
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
View(df)
View(df)
url <- "https://ignaciomsarmiento.github.io/GEIH2018_sample/page1.html"
browseURL(url)
html <- read_html(url)
html %>%
html_elements("h1") %>%
html_text()
html_text(html_elements(html, "h1"))
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
rm(list = ls())
library("tydyvers")
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page_", 1:10, ".html")
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
View(df)
rm(list = ls())
dc_url<-paste0("https://ignaciomsarmiento.github.io/GEIH2018_sample/pages/geih_page", 1:10, ".html"
)
df<-data.frame()
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
library(pacman)
library(rvest, tidyverse)
for (url in dc_url){
print(url)
temp<-read_html(url) %>% html_table()
temp<-as.data.frame(temp[[1]])
df<-rbind(df, temp)
}
??rbind
library(pacman)
library(rvest, tidyverse)
library(pacman)
grasas <- read.table('http://verso.mat.uam.es/~joser.berrendero/datos/EdadPesoGrasas.txt', header = TRUE)
names(grasas)
pairs(grasas)
cor(grasas)
regresion <- lm(grasas ~ edad, data = grasas)
summary(regresion)
plot(grasas$edad, grasas$grasas, xlab='Edad', ylab='Grasas')
abline(regresion)
nuevas.edades <- data.frame(edad = seq(30, 50))
predict(regresion, nuevas.edades)
confint(regresion)
nuevas.edades <- data.frame(edad = seq(20, 60))
# Grafico de dispersion y recta
plot(grasas$edad, grasas$grasas, xlab='Edad', ylab='Grasas')
abline(regresion)
# Intervalos de confianza de la respuesta media:
# ic es una matriz con tres columnas: la primera es la prediccion, las otras dos son los extremos del intervalo
ic <- predict(regresion, nuevas.edades, interval = 'confidence')
lines(nuevas.edades$edad, ic[, 2], lty = 2)
lines(nuevas.edades$edad, ic[, 3], lty = 2)
# Intervalos de prediccion
ic <- predict(regresion, nuevas.edades, interval = 'prediction')
lines(nuevas.edades$edad, ic[, 2], lty = 2, col = 'red')
lines(nuevas.edades$edad, ic[, 3], lty = 2, col = 'red')
View(grasas)
??read_html
# Paquetes
library(pacman)
p_load(tidyverse, rio , skimr , fastDummies, caret, glmnet, MLmetrics , janitor)
p_load(tidyverse,data.table,plyr,rvest,XML,xml2)
library(survey)
library(ggplot2)
datos <- read.csv("datos.csv")####
setwd("E:/PEG/Big_Data/Talleres/Taller_1")
getwd()
datos <- read.csv("datos.csv")
df <- subset(datos, age >= 18 & ocu == 1) ## filtro
## Y : y_total_m
df = select(df, c( "y_total_m" , "clase",
"depto", "dominio" , "estrato1" , "p6090" , "p6210" , "p6920" , "formal" , "cuentaPropia", "microEmpresa",
"cotPension", "regSalud", "p6100", "age" , "sex"))
#### Manejo de datos Limpieza
df <- na.omit(df) ## elimina datos nulos de la base de d
y_total_m <- df$y_total_m
quantile( y_total_m, prob = c( .05, .1, .15, .20 , .25 , .30, .35, .40 , .50 , .55 , .60 , .65 , .7 , .75 , .80 , .85 , .90 , .95))
rm(y_total_m)
df <- df %>% dplyr::filter(y_total_m >= 237125  )
df <- df %>% dplyr::filter( y_total_m<= 5000000 )
## Modelo
library(sjPlot)
library(sjmisc)
library(sjlabelled)
df2 <- mutate(df, age2=age*age)
regresion <- lm(y_total_m ~ age + age2 , data = df2)
salida <- summary(regresion)
tab_model(regresion)
skim(df)
skim(df)
# Modelo
library(sjPlot)
library(sjmisc)
library(sjlabelled)
df2 <- mutate(df, age2=age*age)
regresion <- lm(y_total_m ~ age + age2 , data = df2)
salida <- summary(regresion)
tab_model(regresion)
#CI por bootstrap
require("tidyverse")
set.seed(112)
n<-length(df2$y_total_m)
R<-1000 # Number of Repetions
beta_regresion<-matrix(0,R,2)
peak_age<-rep(0, R)
dimnames(beta_regresion)<-list(c(1:R), c("age", "age2"))
for (i in 1:R){
db_sample<- sample_frac(df2,size=1,replace=TRUE)
f<- lm(y_total_m ~ age + age2 , data = db_sample)
coefs<-f$coefficients
beta_regresion[i,]<-coefs[2:3]
peak_age[i]<-(-beta_regresion[i, 1])/(2*beta_regresion[i, 2])
}
varianza<-var(peak_age)
#Estimación Earnings-Age
age<-seq(18, 90, 0.1)
pred<-predict(regresion, list(age=age, age2=age^2))
dev.new(width=100, height=max(pred)+200000)
plot(age, pred, type = "l", xlab = "Edad", ylab = "Ingreso", lwd=2)
mod<-lm(y_total_m ~ age + age2 , data = df2)
beta<-mod$coefficients
p <- c(-beta[2]/(2*beta[3]), max(pred))
points(t(p), pch=16)
points(t(p), pch=16)
CI<-matrix(c(-beta[2]/(2*beta[3])-(1.96*sqrt(varianza)), -beta[2]/(2*beta[3])+(1.96*sqrt(varianza))), nrow = 1, ncol = 2)
ps <- matrix(c(1, 15/p[2], p[2]/p[1], 1), nrow=2, ncol=2)*p  # get points at axes
points(rbind(c(round(-beta[2]/(2*beta[3])+(1.96*sqrt(varianza)), digits = 2), min(pred)-80000), c(round(-beta[2]/(2*beta[3])-(1.96*sqrt(varianza)), digits = 2), min(pred)-80000), ps[1,]), pch=c("|", "|", "|"), cex=c(1,1,1))
text(rbind(c(round(-beta[2]/(2*beta[3])+(1.96*sqrt(varianza)), digits = 2), min(pred)-80000), c(round(-beta[2]/(2*beta[3])-(1.96*sqrt(varianza)), digits = 2), min(pred)-80000), ps[1,]), col="black", labels=c("UB", "LB", round(ps[1], digits = 2)), pos=c(3, 3, 1))
CI<-matrix(c(-beta[2]/(2*beta[3])-(1.96*sqrt(varianza)), -beta[2]/(2*beta[3])+(1.96*sqrt(varianza))), nrow = 1, ncol = 2)
CI<-matrix(c(-beta[2]/(2*beta[3])-(1.96*sqrt(varianza)), -beta[2]/(2*beta[3])+(1.96*sqrt(varianza))), nrow = 1, ncol = 2)
df2 <- mutate(df, ln_Y_total_m = log(y_total_m), female=1-sex)
regresion_3 <- lm(ln_Y_total_m ~ female , data = df2)
summary(regresion_3)
tab_model(regresion_3)
#bootstrap hombres
require("tidyverse")
set.seed(112)
n<-length(df2$ln_Y_total_m)
R<-1000 # Number of Repetions
beta_regresionh<-matrix(0,R,2)
peak_ageh<-rep(0, R)
dimnames(beta_regresionh)<-list(c(1:R), c("age", "age2"))
df3h<-mutate(df2[df2[,"female"]==0,], age2=age^2)
for (i in 1:R){
db_sampleh<- sample_frac(df3h,size=1,replace=TRUE)
f<- lm(y_total_m ~ age + age2, data = db_sampleh)
coefs<-f$coefficients
beta_regresionh[i,]<-coefs[2:3]
peak_ageh[i]<-(-beta_regresionh[i, 1])/(2*beta_regresionh[i, 2])
}
varianzah<-var(peak_ageh)
lbh<-dflnpredh$age[which(dflnpredh$ln_Y_total_m==max(dflnpredh$ln_Y_total_m))]-(1.96*sqrt(varianzah))
#bootstrap hombres
require("tidyverse")
set.seed(112)
n<-length(df2$ln_Y_total_m)
R<-1000 # Number of Repetions
beta_regresionh<-matrix(0,R,2)
peak_ageh<-rep(0, R)
dimnames(beta_regresionh)<-list(c(1:R), c("age", "age2"))
df3h<-mutate(df2[df2[,"female"]==0,], age2=age^2)
for (i in 1:R){
db_sampleh<- sample_frac(df3h,size=1,replace=TRUE)
f<- lm(y_total_m ~ age + age2, data = db_sampleh)
coefs<-f$coefficients
beta_regresionh[i,]<-coefs[2:3]
peak_ageh[i]<-(-beta_regresionh[i, 1])/(2*beta_regresionh[i, 2])
}
varianzah<-var(peak_ageh)
lbh<-dflnpredh$age[which(dflnpredh$ln_Y_total_m==max(dflnpredh$ln_Y_total_m))]-(1.96*sqrt(varianzah))
ubh<-dflnpredh$age[which(dflnpredh$ln_Y_total_m==max(dflnpredh$ln_Y_total_m))]+(1.96*sqrt(varianzah))
CIh<-matrix(c(lbh, ubh), nrow=1, ncol=2)
colnames(CIh)<-c("Lower bound hombre", "Upper bound hombre")
#bootstrap mujeres
require("tidyverse")
set.seed(112)
n<-length(df2$ln_Y_total_m)
R<-1000 # Number of Repetions
beta_regresionm<-matrix(0,R,2)
peak_agem<-rep(0, R)
dimnames(beta_regresionm)<-list(c(1:R), c("age", "age2"))
df3m<-mutate(df2[df2[,"female"]==1,], age2=age^2)
for (i in 1:R){
db_samplem<- sample_frac(df3m,size=1,replace=TRUE)
f<- lm(y_total_m ~ age + age2, data = db_samplem)
coefs<-f$coefficients
beta_regresionm[i,]<-coefs[2:3]
peak_agem[i]<-(-beta_regresionm[i, 1])/(2*beta_regresionm[i, 2])
}
varianzam<-var(peak_agem)
#CI mujeres
lbm<-dflnpredm$age[which(dflnpredm$ln_Y_total_m==max(dflnpredm$ln_Y_total_m))]-(1.96*sqrt(varianzam))
ubm<-dflnpredm$age[which(dflnpredm$ln_Y_total_m==max(dflnpredm$ln_Y_total_m))]+(1.96*sqrt(varianzam))
CIm<-matrix(c(lbm, ubm), nrow=1, ncol=2)
colnames(CIm)<-c("Lower bound mujer", "Upper bound mujer")
